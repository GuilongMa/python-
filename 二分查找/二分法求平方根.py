





































































































































































































































































































































































































































































































































































# -*- coding: utf-8 -*-
"""
Created on Fri Aug 10 17:03:29 2018

@author: qzxy
"""


def findRoot(x, power, epsilon):
    """x和epsilon是整数或者浮点数，power是整数
        epsilon>0且power>=1
        如果y**power和x的差小于epsilon，就返回浮点数y，
        否则返回None
    """
    if x < 0 and power % 2 == 0:
        # 负数没有偶数次方根
        return None
    low = min(-1.0, x)
    high = max(1.0, x)
    ans = (high + low) / 2.0
    while abs(ans ** power - x) >= epsilon:
        if ans ** power < x:
            low = ans
        else:
            high = ans
        ans = (low + high) / 2.0
    return ans


def findRoot2(x, power, epsilon):
    """x和epsilon是整数或者浮点数，power是整数
        epsilon>0且power>=1
        如果y**power和x的差小于epsilon，就返回浮点数y，
        否则返回None
    """
    if x < 0 and power % 2 == 0:
        # 负数没有偶数次方根
        return None
    low = min(-1.0, x)
    high = max(1.0, x)
    ans = (high + low) / 2.0
    while len(str(ans)[str(ans).find("."):]) != epsilon:
        if ans ** power < x:
            low = ans
        else:
            high = ans
        ans = (low + high) / 2.0
    return ans


if __name__ == "__main__":
    x = 7
    power = 2
    epsilon = 0.0001
    print(findRoot(x, power, epsilon))
    epsilon = 7
    print(findRoot2(x, power, epsilon))

